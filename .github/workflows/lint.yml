name: Linting

on:
  push:
    branches: [main]
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'
  pull_request:
    branches: [main]
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'

jobs:
  Lint:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Project dependencies
        run: npm install --legacy-peer-deps

      - name: ESLint Checking
        if: always()
        run: npm run lint

      - name: StyleLint Checking
        if: always()
        run: npm run stylelint
