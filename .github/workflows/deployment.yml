name: Publish Docker image

on:
  push:
#    tags:
#      - "v*.*.*"
    branches:
      - add_arm_image
jobs:
  build_multi_platform_images:
    name: Build and push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "arm"
            path: linux/arm64
          - name: "amd"
            path: linux/amd64

    steps:
      - name: Set environment variable
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
          echo ::set-output RELEASE_VERSION=test1.0
          echo $RELEASE_VERSION

      - name: Check out GitHub repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ matrix.path }}
          push: true
          tags: ${{ github.repository }}:${{ env.RELEASE_VERSION }}-${{ matrix.name }}

  create_manifest:
    needs: build_multi_platform_images
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variable
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
          echo ::set-output RELEASE_VERSION=test1.0
          echo $RELEASE_VERSION

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Create Docker manifest and push multi-arch image to Registry
        run: |
          docker manifest create ${{ github.repository }}:${{ env.RELEASE_VERSION }} --amend ${{ github.repository }}:${{ env.RELEASE_VERSION }}-arm --amend ${{ github.repository }}:${{ env.RELEASE_VERSION }}-amd
          docker manifest push -p ${{ github.repository }}:${{ env.RELEASE_VERSION }}
